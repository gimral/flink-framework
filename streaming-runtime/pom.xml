<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.gimral</groupId>
    <artifactId>streaming-runtime</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <java.version>17</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <flink.version>2.0.0</flink.version>
        <leap.streaming.version>1.0-SNAPSHOT</leap.streaming.version>
        <junit.version>5.10.2</junit.version>
        <log4j.version>2.25.0</log4j.version>
        <aspectj.version>1.9.24</aspectj.version>
        <opentelemetry.version>1.41.0</opentelemetry.version>
        <spotless.version>2.44.0</spotless.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.gimral</groupId>
            <artifactId>streaming-core</artifactId>
            <version>${leap.streaming.version}</version>
        </dependency>

        <dependency>
            <groupId>com.gimral</groupId>
            <artifactId>streaming-logger</artifactId>
            <version>${leap.streaming.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.gimral</groupId>
            <artifactId>streaming-connector-kafka</artifactId>
            <version>${leap.streaming.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- Apache Flink Core Dependency -->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-core</artifactId>
            <version>${flink.version}</version>
        </dependency>

        <!-- Apache Flink Streaming API Dependency -->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-streaming-java</artifactId>
            <version>${flink.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-runtime</artifactId>
            <version>${flink.version}</version>
        </dependency>

        <!-- Tracing Dependency -->
        <!--        <dependency>-->
        <!--            <groupId>io.opentelemetry</groupId>-->
        <!--            <artifactId>opentelemetry-api</artifactId>-->
        <!--            <version>${opentelemetry.version}</version>-->
        <!--        </dependency>-->
        <!--        <dependency>-->
        <!--            <groupId>io.opentelemetry</groupId>-->
        <!--            <artifactId>opentelemetry-sdk</artifactId>-->
        <!--            <version>${opentelemetry.version}</version>-->
        <!--        </dependency>-->

        <!-- Flink Test Utilities (for unit/integration tests) -->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-test-utils</artifactId>
            <version>${flink.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Flink Test Utilities for JUnit 5 -->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-test-utils-junit</artifactId>
            <version>${flink.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Tracing Test Utilities -->
<!--        <dependency>-->
<!--            <groupId>io.opentelemetry</groupId>-->
<!--            <artifactId>opentelemetry-sdk-testing</artifactId>-->
<!--            <version>${opentelemetry.version}</version>-->
<!--            <scope>test</scope>-->
<!--        </dependency>-->

        <!-- AspectJ Dependency -->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>${aspectj.version}</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>${aspectj.version}</version>
        </dependency>

        <!-- JUnit Jupiter for testing -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core-test</artifactId>
            <version>${log4j.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.junit.jupiter</groupId>
                    <artifactId>junit-jupiter</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.junit.jupiter</groupId>
                    <artifactId>junit-jupiter-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.junit.platform</groupId>
                    <artifactId>junit-platform-commons</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.junit.platform</groupId>
                    <artifactId>junit-platform-engine</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.junit-pioneer</groupId>
                    <artifactId>junit-pioneer</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <!-- Maven Compiler Plugin-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.13.0</version>
                <configuration>
                    <skipMain>true</skipMain> <!-- Skip javac compilation -->
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.5.3</version>
                <configuration>
                    <useModulePath>false</useModulePath>
                </configuration>
            </plugin>
<!--             AspectJ Maven Plugin for Compile-Time Weaving-->
            <plugin>
                <groupId>dev.aspectj</groupId>
                <artifactId>aspectj-maven-plugin</artifactId>
                <version>1.14.1</version>
                <configuration>
                    <complianceLevel>${java.version}</complianceLevel>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <showWeaveInfo>true</showWeaveInfo>
                    <verbose>true</verbose>
                    <Xlint>ignore</Xlint>
                    <encoding>UTF-8</encoding>
                    <weaveDependencies>
                        <dependency>
                            <groupId>com.gimral</groupId>
                            <artifactId>streaming-core</artifactId>
                        </dependency>
                        <!-- Weave Flink Runtime -->
                        <weaveDependency>
                            <groupId>org.apache.flink</groupId>
                            <artifactId>flink-runtime</artifactId>
                        </weaveDependency>
                    </weaveDependencies>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <!-- Ensure consistent AspectJ version -->
                    <dependency>
                        <groupId>org.aspectj</groupId>
                        <artifactId>aspectjtools</artifactId>
                        <version>${aspectj.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
                <version>${spotless.version}</version>
                <configuration>
                    <java>
                        <!-- Specify which files to format (defaults can be overridden) -->
                        <includes>
                            <include>src/main/java/**/*.java</include>
                            <include>src/test/java/**/*.java</include>
                        </includes>
                        <!-- Use Google Java Format for consistent styling -->
                        <googleJavaFormat>
                            <version>1.23.0</version> <!-- Latest compatible version -->
                            <style>AOSP</style> <!-- Options: GOOGLE, AOSP -->
                            <reflowLongStrings>true</reflowLongStrings>
                            <formatJavadoc>true</formatJavadoc>
                        </googleJavaFormat>
                        <!-- Ensure consistent import ordering -->
                        <importOrder>
                            <wildcardsLast>true</wildcardsLast>
                        </importOrder>
                        <!-- Remove unused imports -->
                        <removeUnusedImports/>
                        <!-- Ensure annotations are formatted correctly -->
                        <formatAnnotations/>
                        <!-- Trim trailing whitespace and ensure files end with a newline -->
                        <trimTrailingWhitespace/>
                        <endWithNewline/>
                    </java>
                </configuration>
                <executions>
                    <execution>
                        <id>spotless-apply-on-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>apply</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>spotless-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Maven Shade Plugin to Package Woven Classes -->
            <!--            <plugin>-->
            <!--                <groupId>org.apache.maven.plugins</groupId>-->
            <!--                <artifactId>maven-shade-plugin</artifactId>-->
            <!--                <version>3.6.0</version>-->
            <!--                <executions>-->
            <!--                    <execution>-->
            <!--                        <phase>package</phase>-->
            <!--                        <goals>-->
            <!--                            <goal>shade</goal>-->
            <!--                        </goals>-->
            <!--                        <configuration>-->
            <!--                            <createDependencyReducedPom>true</createDependencyReducedPom>-->
            <!--                            <artifactSet>-->
            <!--                                <includes>-->
            <!--                                    <include>org.apache.flink:*</include>-->
            <!--                                </includes>-->
            <!--                            </artifactSet>-->
            <!--                            <filters>-->
            <!--                                <filter>-->
            <!--                                    <artifact>org.apache.flink:*</artifact>-->
            <!--                                    <excludes>-->
            <!--                                        <exclude>META-INF/*.SF</exclude>-->
            <!--                                        <exclude>META-INF/*.DSA</exclude>-->
            <!--                                        <exclude>META-INF/*.RSA</exclude>-->
            <!--                                    </excludes>-->
            <!--                                </filter>-->
            <!--                            </filters>-->
            <!--                        </configuration>-->
            <!--                    </execution>-->
            <!--                </executions>-->
            <!--            </plugin>-->
        </plugins>
    </build>
</project>